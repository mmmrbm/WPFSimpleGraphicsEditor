namespace SimpleGraphicsEditor.Utilities.UserDataPersistance
{
    using System;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Xml.Serialization;

    /// <summary>
    /// Represents an entity which can be used to deserialize application data from XML
    /// </summary>
    public static class DeserializeData
    {
        /// <summary>
        /// A string constant which holds the namespace of the application models.
        /// This is required because of the inheritance in graphic layer.
        /// </summary>
        private const string ModelNameSpace = "SimpleGraphicsEditor.Data.Models";

        /// <summary>
        /// Desrializes XML to an object.
        /// </summary>
        /// <typeparam name="T">>The type of the object which needs to be deserialized.</typeparam>
        /// <param name="xml">>The XML string generated by serializing object.</param>
        /// <returns>The object deserialized from process.</returns>
        public static T DeserializeObject<T>(string xml)
        {
            XmlSerializer xs = new XmlSerializer(typeof(T), ModelNameSpace);
            MemoryStream memoryStream = new MemoryStream(StringToUTF8ByteArray(xml));
            XmlTextWriter xmlTextWriter = new XmlTextWriter(memoryStream, Encoding.UTF8);
            return (T)xs.Deserialize(memoryStream);
        }

        /// <summary>
        /// Helper method to convert String to UTF8 Byte Array
        /// </summary>
        /// <param name="pXmlString">XML string</param>
        /// <returns>Converted UTF8 Byte Array</returns>
        private static Byte[] StringToUTF8ByteArray(string pXmlString)
        {
            UTF8Encoding encoding = new UTF8Encoding();
            byte[] byteArray = encoding.GetBytes(pXmlString);
            return byteArray;
        }
    }
}
